}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)
nbootstrap = 1000
trajs=data.frame();eigs=data.frame()
for(b in 1:nbootstrap){
if(b%%100==0){show(b)}
#ar=array(data = c(diag(3),runif(9,-0.5,0.5)),dim = c(3,3,2))
#x=marima.sim(kvar=3,ar.model = ar,nsim=10000)
ar=array(data = c(diag(2),c(0,runif(1,-0.1,0.1),runif(1,-0.1,0.1),0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
trajs=rbind(trajs,laggedCorrs(x,format = "coldf"))
#eigs=rbind(eigs,eigen(ar[,,2])$values)
eigs=rbind(eigs,c(ar[1,2,2],ar[2,1,2]))
}
ccoef=c()
for(k in 3:15){clust = kmeans(trajs,centers = k,nstart = 100,iter.max = 100);ccoef=append(ccoef,clust$betweenss/clust$totss)}
plot(3:15,ccoef,type='l')
clust = kmeans(trajs,centers = 4,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)
clust = kmeans(trajs,centers = 8,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)
nbootstrap = 1000
trajs=data.frame();eigs=data.frame()
for(b in 1:nbootstrap){
if(b%%100==0){show(b)}
#ar=array(data = c(diag(3),runif(9,-0.5,0.5)),dim = c(3,3,2))
#x=marima.sim(kvar=3,ar.model = ar,nsim=10000)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-0.1,0.1),runif(1,-0.1,0.1),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
trajs=rbind(trajs,laggedCorrs(x,format = "coldf"))
#eigs=rbind(eigs,eigen(ar[,,2])$values)
eigs=rbind(eigs,c(ar[1,2,2],ar[2,1,2]))
}
ccoef=c()
for(k in 3:15){clust = kmeans(trajs,centers = k,nstart = 100,iter.max = 100);ccoef=append(ccoef,clust$betweenss/clust$totss)}
plot(3:15,ccoef,type='l')
clust = kmeans(trajs,centers = 6,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
trajs=data.frame();eigs=data.frame()
for(b in 1:nbootstrap){
if(b%%100==0){show(b)}
#ar=array(data = c(diag(3),runif(9,-0.5,0.5)),dim = c(3,3,2))
#x=marima.sim(kvar=3,ar.model = ar,nsim=10000)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-0.1,0.1),runif(1,-0.1,0.1),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
trajs=rbind(trajs,laggedCorrs(x,format = "coldf"))
#eigs=rbind(eigs,eigen(ar[,,2])$values)
eigs=rbind(eigs,c(ar[1,2,3],ar[2,1,3]))
}
ccoef=c()
for(k in 3:15){clust = kmeans(trajs,centers = k,nstart = 100,iter.max = 100);ccoef=append(ccoef,clust$betweenss/clust$totss)}
plot(3:15,ccoef,type='l')
clust = kmeans(trajs,centers = 7,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
clust = kmeans(trajs,centers = 8,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
clust = kmeans(trajs,centers = 9,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
clust = kmeans(trajs,centers = 4,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)
clust = kmeans(trajs,centers = 8,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)
clust = kmeans(trajs,centers = 9,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)
nbootstrap = 10000
trajs=data.frame();eigs=data.frame()
for(b in 1:nbootstrap){
if(b%%100==0){show(b)}
#ar=array(data = c(diag(3),runif(9,-0.5,0.5)),dim = c(3,3,2))
#x=marima.sim(kvar=3,ar.model = ar,nsim=10000)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-0.1,0.1),runif(1,-0.1,0.1),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
trajs=rbind(trajs,laggedCorrs(x,format = "coldf"))
#eigs=rbind(eigs,eigen(ar[,,2])$values)
eigs=rbind(eigs,c(ar[1,2,3],ar[2,1,3]))
}
resdir = paste0(Sys.getenv('CN_HOME'),'/Results/SpatioTempCausality/Synthetic/arma')
resdir = paste0(Sys.getenv('CN_HOME'),'/Results/SpatioTempCausality/Synthetic/arma/')
nbootstrap = 10000
maxai = 0.1
lag = 2
nclust = 9
clust = kmeans(trajs,centers = nclust,nstart = 1000,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=as.character(clust$cluster)),aes(x=a1,y=a2,color=cluster))
g+geom_point()+stdtheme
g+geom_point(pch='.')+stdtheme
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)+scale_color_discrete(name="cluster")
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=as.character(clust$cluster)),aes(x=a1,y=a2,color=cluster))
g+geom_point(size=0.5)+stdtheme
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(maxai),'_lag',lag,'nclust',nclust,'.png'),width=16,height=15,units='cm')
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=16,height=15,units='cm')
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=17,height=15,units='cm')
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=18,height=15,units='cm')
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)+scale_color_discrete(name="cluster")
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(maxai),'_lag',lag,'nclust',nclust,'.png'),width=16,height=15,units='cm')
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=16,height=15,units='cm')
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)+scale_color_discrete(name="cluster")+stdtheme
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=16,height=15,units='cm')
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=as.character(clust$cluster)),aes(x=a1,y=a2,color=cluster))
g+geom_point(size=0.5)+stdtheme
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
nbootstrap = 10000
maxai = 0.1
lag = 2
# set seed for reproducibility
set.seed(0)
trajs=data.frame();eigs=data.frame()
for(b in 1:nbootstrap){
if(b%%100==0){show(b)}
#ar=array(data = c(diag(3),runif(9,-0.5,0.5)),dim = c(3,3,2))
#x=marima.sim(kvar=3,ar.model = ar,nsim=10000)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
trajs=rbind(trajs,laggedCorrs(x,format = "coldf"))
#eigs=rbind(eigs,eigen(ar[,,2])$values)
eigs=rbind(eigs,c(ar[1,2,3],ar[2,1,3]))
}
# cluster ts
#clust = kmeans(trajs,centers = 8,nstart = 100,iter.max = 100)
#rows = which(Im(eigs[,1])==0&Im(eigs[,2])==0&Im(eigs[,3])==0)
#g=ggplot(data.frame(lambda1=as.numeric(eigs[rows,1]),lambda2=as.numeric(eigs[rows,3]),cluster=clust$cluster[rows]),aes(x=lambda1,y=lambda2,color=cluster))
#g+geom_point()
#g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
#g+geom_point()
#ccoef=c()
#for(k in 3:15){clust = kmeans(trajs,centers = k,nstart = 100,iter.max = 100);ccoef=append(ccoef,clust$betweenss/clust$totss)}
#plot(3:15,ccoef,type='l')
# -> k=9 propre
nclust = 9
clust = kmeans(trajs,centers = nclust,nstart = 1000,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=as.character(clust$cluster)),aes(x=a1,y=a2,color=cluster))
g+geom_point(size=0.5)+stdtheme
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)+scale_color_discrete(name="cluster")+stdtheme
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
g+geom_point()+geom_line()+facet_wrap(~cluster)+scale_color_discrete(name="cluster")+xlab(expression(tau))+ylab(expression(rho[tau]))+stdtheme
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
g+geom_point(size=0.5)+xlab(expression(a[1]))+ylab(expression(a[2]))+stdtheme
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=as.character(clust$cluster)),aes(x=a1,y=a2,color=cluster))
g+geom_point(size=0.5)+xlab(expression(a[1]))+ylab(expression(a[2]))+stdtheme
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
1/sqrt(1+1/0.1^2)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),0,0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),0,0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),0,0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),0,0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),0,0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
x
plot(1:nrow(x),x[,1],type='l')
ar=array(data = c(diag(2),c(0,0.5,0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=100000)
plot(1:100000,x[,1],type='l');points(1:1000,x[,2],col='red',type='l')
plot(1:100000,x[,1],type='l');points(1:100000,x[,2],col='red',type='l')
x=marima.sim(kvar=2,ar.model = ar,nsim=1000)
plot(1:1000,x[,1],type='l');points(1:1000,x[,2],col='red',type='l')
ar=array(data = c(diag(2),c(0,0.5,-0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=1000)
plot(1:1000,x[,1],type='l');points(1:1000,x[,2],col='red',type='l')
ar=array(data = c(diag(2),c(0,-0.5,-0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=1000)
plot(1:1000,x[,1],type='l');points(1:1000,x[,2],col='red',type='l')
epsilon=matrix(rnorm(2000),ncol=2)
espilon
epsilon
cor(epsilon)
x=matrix(rep(0,2000),ncol=2)
for(t in 2:nrow(x)){x[t,]=0.1*epsilon[t-1,c(2,1)]+epsilon[t,]}
x
plot(1:2000,x[,1],type='l')
dim(x)
plot(1:1000,x[,1],type='l')
plot(1:nrow(x),x[,1],type='l')
epsilon=matrix(rnorm(20000),ncol=2)
x=matrix(rep(0,20000),ncol=2)
for(t in 2:nrow(x)){x[t,]=0.1*epsilon[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
epsilon=matrix(rnorm(20000),ncol=2)
x=matrix(rep(0,20000),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=0.1*x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
epsilon=matrix(rnorm(20000),ncol=2)
x=matrix(rep(0,20000),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
epsilon=matrix(rnorm(20000),ncol=2)
x=matrix(rep(0,20000),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
epsilon=matrix(rnorm(20000),ncol=2)
x=matrix(rep(0,20000),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
tf=100000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
tf=100000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
help(marima.sim)
marima.sim
pol.mul
help(pol.mul)
ar=array(data = c(diag(2),c(0,-0.5,-0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=1000)
plot(1:1000,x[,1],type='l');points(1:1000,x[,2],col='red',type='l')
cor.test(x[2:nrow(x),1],x[1:(nrow(x)-1),2])
var(x[,1])
tf=10000
ar=array(data = c(diag(2),c(0,-0.5,-0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=tf)
plot(1:tf,x[,1],type='l');points(1:tf,x[,2],col='red',type='l')
var(x[,1])
tf=100000
ar=array(data = c(diag(2),c(0,-0.5,-0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=tf)
cor.test(x[2:nrow(x),1],x[1:(nrow(x)-1),2])
var(x[,1])
tf=100000
ar=array(data = c(diag(2),c(0,0,0,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=tf)
var(x[,1])
marima.sin
marima.sim
kvar=2
ar.dif <- array(c(diag(kvar)), dim = c(kvar, kvar, 1))
ar.dif
ar
ar.model.d <- pol.mul(ar.model, ar.dif, L = (Lar + Ldif -
2 + 1))
ar.model.d <- pol.mul(ar, ar.dif)
ar.model.d <- pol.mul(ar.model, ar.dif, L = (1 + 2 -
2 + 1))
ar.model.d <- pol.mul(ar, ar.dif, L = (1 + 2 -
2 + 1))
ar.model.d
marima.sim
LL <- pol.order(ar.model.d) + 1
LL
ar.model.d
ar
ar=array(data = c(diag(2),c(0,-0.5,-0.5,0)),dim = c(2,2,2))
ar
ar.model.d <- pol.mul(ar, ar.dif, L = (1 + 2 -
2 + 1))
ar.model.d
marima.sim
tf=100000
tf=10000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t,]-0.5*x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
tf=10000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t,]-x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
tf=10000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=-x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
tf=10000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=-0.8*x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
var(epsilon)
1/1-0.8
1/(1-0.8)
var(x)
1/(1-0.8^2)
install.packages("scholar")
library(scholar)
scholar::get_citation_history("3559635412259202692")
help("get_citation_history")
get_article_cite_history("","3559635412259202692")
get_article_cite_history("zoioGw4AAAAJ","3559635412259202692")
help(get_article_cite_history)
get_profile("zoioGw4AAAAJ")
get_profile
getOption
setwd(paste0(Sys.getenv('CS_HOME'),'/Cybergeo/Models/cybergeo20/HyperNetwork/Models/Analysis'))
source('networkConstruction.R')
source('citationNWConstruction.R')
setwd(paste0(Sys.getenv('CS_HOME'),'/Cybergeo/Models/cybergeo20/HyperNetwork/Models/Analysis'))
source('networkConstruction.R')
source('citationNWConstruction.R')
source('semexport.R')
nkws='50000'
eth_0 = '50'
eth = '100'
kmin = '0'
kmax = '1200'
freqmin = '50'
freqmax = '10000'
eth = '100'
library(igraph)
db=paste0('relevant_full_',nkws,'_eth',eth_0,'_nonfiltdico')
dbparams = paste0('relevant_full_',nkws,'_eth',eth_0,'_nonfiltdico_kmin',kmin,'_kmax',kmax,'_freqmin',freqmin,'_freqmax',freqmax,'_eth',eth)
load(paste0('probas/',dbparams,'.RData'))
load(paste0('processed/',db,'.RData'))
keyword_dico=res$keyword_dico;g=res$g;rm(res);gc()
them_probas = probas
# define comunities names
# com
thematics = communities(sub$com)
# define names by hand
themnames = as.character(read.csv(file=paste0('export/comunitiesnames/',dbparams,'.csv'),header=FALSE,stringsAsFactors = FALSE)[,1])
names(thematics)<-themnames
# select existing thematics
export_probas = them_probas[,!is.na(names(thematics))]
colnames(export_probas) = names(thematics)[!is.na(names(thematics))]
#themnames=colnames(export_probas)[2:ncol(export_probas)]
library(igraph)
library(dplyr)
library(Matrix)
citnwfile=paste0(Sys.getenv('CS_HOME'),'/Cybergeo/Models/cybergeo20/HyperNetwork/Data/nw/citationNetwork.RData')
load(citnwfile)
load(paste0(Sys.getenv('CS_HOME'),'/Cybergeo/Models/cybergeo20/HyperNetwork/Data/nw/citationNetworkStats.RData'))
load(paste0(Sys.getenv('CS_HOME'),'/Cybergeo/Models/cybergeo20/HyperNetwork/Data/nw/citationNetworkComs.RData'))
library(Matrix)
library(ggplot2)
source(paste0(Sys.getenv('CN_HOME'),'/Models/Utils/R/plots.R'))
figdir=paste0(Sys.getenv('CS_HOME'),'/Cybergeo/Models/cybergeo20/HyperNetwork/Results/Interdisc/');dir.create(figdir)
citcomnameslabs = c("ABMS","Accessibility\nLand-Use","Complex\nNetworks","Ecology","Economic\nGeography","GIS","Social\nGeography",
"Socio-ecology","Sociology","Spatial\nAnalysis","Time\nGeography",
"Urban\nNetworks","Urban\nSimulation","Urban\nStudies")
probas = export_probas[,2:ncol(export_probas)]
rownames(probas)<-names(keyword_dico)
citadjacency = get.adjacency(citationcore,sparse=TRUE)[vertices$name,vertices$name]
vertices = V(citationcore)[intersect(rownames(probas),V(citationcore)$name)]
citadjacency = get.adjacency(citationcore,sparse=TRUE)[vertices$name,vertices$name]
sum(citadjacency)
source('corrs.R')
V(citationcore)$citclass
citcomnames
citprobas = Matrix(0,nrow=vcount(citationcore),ncol=length(unique(V(citationcore)$citclass)))
colnames(citprobas)<-unique(V(citationcore)$citclass)
colnames(citprobas)<-unique(V(citationcore)$citclass);rownames(citprobas)<-V(citationcore)$name
for(citclass in unique(V(citationcore)$citclass)){
citprobas[V(citationcore)[V(citationcore)$citclass==citclass]$name,citclass]=1
}
sum(citprobas)
unique(V(citationcore)$citclass)
colSums(citprobas)
rowSums(citprobas)
V(citationcore)$citclass
for(citclass in unique(V(citationcore)$citclass)){
show(length(which(V(citationcore)$citclass==citclass)))
#citprobas[V(citationcore)[V(citationcore)$citclass==citclass]$name,citclass]=1
}
citprobas = Matrix(0,nrow=vcount(citationcore),ncol=length(unique(V(citationcore)$citclass)))
colnames(citprobas)<-unique(V(citationcore)$citclass);rownames(citprobas)<-V(citationcore)$name
for(citclass in unique(V(citationcore)$citclass)){
#show(length(which(V(citationcore)$citclass==citclass)))
citprobas[V(citationcore)$name[which((citationcore)$citclass==citclass)],citclass]=1
}
V(citationcore)$name[which((citationcore)$citclass==citclass)]
which((citationcore)$citclass==citclass)
citclass
citprobas = Matrix(0,nrow=vcount(citationcore),ncol=length(unique(V(citationcore)$citclass)))
colnames(citprobas)<-unique(V(citationcore)$citclass);rownames(citprobas)<-V(citationcore)$name
for(citclass in unique(V(citationcore)$citclass)){
#show(length(which(V(citationcore)$citclass==citclass)))
citprobas[V(citationcore)$name[which(V(citationcore)$citclass==citclass)],citclass]=1
}
rowSums(citprobas)
corrMat(probas,citprobas)
rho = corrMat(probas,citprobas)
mean(abs(rho))
max(abs(rho))
mean(degree(gcitation,v=V(gcitation),mode = "in"))
mean(degree(gcitation,v=V(gcitation)[degree(gcitation)>0],mode = "in"))
mean(degree(gcitation,v=V(gcitation)[degree(gcitation,mode="in")>0],mode = "in"))
10/3000
10/3000*100
length(vertices$name)
citadjacency = get.adjacency(citationcore,sparse=TRUE)#[vertices$name,vertices$name]
dim(citadjacency)
citprobas = Matrix(0,nrow=vcount(citationcore),ncol=length(unique(V(citationcore)$citclass)))
colnames(citprobas)<-unique(V(citationcore)$citclass);rownames(citprobas)<-V(citationcore)$name
for(citclass in unique(V(citationcore)$citclass)){
show(citclass)
citprobas[,citclass]=colSums(citadjacency[V(citationcore)$name[V(citationcore)$citclass==citclass],])
}
rowSums(citprobas)
min(degree(citationcore))
min(colSums(citadjacency))
citprobas = Matrix(0,nrow=vcount(citationcore),ncol=length(unique(V(citationcore)$citclass)))
colnames(citprobas)<-unique(V(citationcore)$citclass);rownames(citprobas)<-V(citationcore)$name
for(citclass in unique(V(citationcore)$citclass)){
show(citclass)
citprobas[,citclass]=colSums(citadjacency[V(citationcore)$name[V(citationcore)$citclass==citclass],])
}
m=Diagonal(nrow(citprobas),1/rowSums(citprobas))
citprobas=m%*%citprobas
rowSum(citprobas)
rowSums(citprobas)
dim(citprobas)
length(which(rowSums(citprobas)>0))
subprobas = citprobas[rowSums(citprobas)>0,]
dim(subprobas)
subprobas
originalities=apply(subprobas,MARGIN = 1,FUN = function(r){if(sum(r)==0){return(0)}else{return(1 - sum(r^2))}})
originalities
V(citationcore)$citclass
citclass=V(citationcore)$citclass[rowSums(citprobas)>0]
dat=data.frame(originality=originalities[citclass!='NA'],citclass=citclass[citclass!='NA'])
sdat=as.tbl(dat)%>%group_by(citclass)%>%summarise(mean=mean(originality))
gp=ggplot(dat,aes(x=originality, color=citclass))
gp+geom_density()+geom_vline(data=sdat, aes(xintercept=mean,  colour=citclass),linetype="dashed", size=1)+scale_color_discrete(name='Citation class')+stdtheme
gp+geom_density()+geom_vline(data=sdat, aes(xintercept=mean,  colour=citclass),linetype="dashed", size=1)+xlab("Citation originality")+scale_color_discrete(name='Citation class')+stdtheme
ggsave(paste0(figdir,'citation_originalities_citclass.png'),width=30,height=20,units='cm')
gp+geom_density()+geom_vline(data=sdat, aes(xintercept=mean,  colour=citclass),linetype="dashed", size=1)+xlab("Semantic originality")+scale_color_discrete(name='Citation class')+stdtheme
dat=data.frame(originality=originalities[vertices$citclass!='NA'],citclass=vertices$citclass[vertices$citclass!='NA'])
sdat=as.tbl(dat)%>%group_by(citclass)%>%summarise(mean=mean(originality))
gp=ggplot(dat,aes(x=originality, color=citclass))
gp+geom_density()+geom_vline(data=sdat, aes(xintercept=mean,  colour=citclass),linetype="dashed", size=1)+xlab("Semantic originality")+scale_color_discrete(name='Citation class')+stdtheme
vertices = V(citationcore)[intersect(rownames(probas),V(citationcore)$name)]
originalities=apply(probas[vertices$name,],MARGIN = 1,FUN = function(r){if(sum(r)==0){return(0)}else{return(1 - sum(r^2))}})
dat=data.frame(originality=originalities[vertices$citclass!='NA'],citclass=vertices$citclass[vertices$citclass!='NA'])
sdat=as.tbl(dat)%>%group_by(citclass)%>%summarise(mean=mean(originality))
gp=ggplot(dat,aes(x=originality, color=citclass))
gp+geom_density()+geom_vline(data=sdat, aes(xintercept=mean,  colour=citclass),linetype="dashed", size=1)+xlab("Semantic originality")+scale_color_discrete(name='Citation class')+stdtheme
ggsave(paste0(figdir,'originalities_citclass.png'),width=30,height=20,units='cm')
