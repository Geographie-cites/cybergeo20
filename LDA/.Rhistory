par(mar=c(0,0,1,0) + 0.1)
for (j in Years) {
par(fg=1)
shp = article_maps(Year, articles)
map_studied(shp, Year)
}
}
,movie.name="studied.gif", ani.height=400, ani.width=800
) #SaveGIF
}
make_studied_gif(Years, articles)
Years = 1996:2015
make_studied_gif(Years, articles)
Year = 2004
shp = article_maps(Year, articles)
map_studied(shp, Year)
article_maps = function(year, articles) {
REG = world
articles_y = articles[substr(articles$date.1, 1, 4) == as.character(Year),]
Studied = colSums(articles[,studies])
Authoring = colSums(articles[,authors])
SelfStudied = colSums(articles[,locals])
countryBase = data.frame(countries, Studied, Authoring, SelfStudied)
REG@data = data.frame(REG@data, countryBase[match(REG@data$CNTR_ID,countryBase$countries), ])
REG@data$StudiedAtAll = ifelse(REG@data$Studied >= 1, "#1C6F91", "lightgrey")
REG@data$AuthoringAtAll = ifelse(REG@data$Authoring >= 1, "orange", "lightgrey")
REG@data$SelfStudiedAtAll = ifelse(REG@data$SelfStudied >= 1,  "grey20", "lightgrey")
return(REG)
}
map_studied = function(shp, year) {
REG = shp
par(mfrow=c(1,1), mar = c(0,0,1,0))
plot(REG, col=REG@data$StudiedAtAll, border="white")
title(paste0("Countries studied in Cybergeo articles | ", year))
# plot(REG, col=REG@data$AuthoringAtAll, border="white")
#  title(paste0("Countries authoring Cybergeo articles | ", Year))
# plot(REG, col=REG@data$SelfStudiedAtAll, border="white")
#  title(paste0("Countries studied by locals in Cybergeo articles | ", Year))
}
make_studied_gif <- function (years, articles) {
library(animation)
ani.options(interval=.2)
saveGIF({
layout(matrix(c(1, rep(2, 5)), 6, 1))
# Adjust the margins a little
par(mar=c(0,0,1,0))
for (j in Years) {
par(fg=1)
shp = article_maps(Year, articles)
map_studied(shp, Year)
}
}
,movie.name="studied.gif", ani.height=400, ani.width=800
) #SaveGIF
}
Years = 1996:2015
Years
make_studied_gif(Years, articles)
make_studied_gif <- function (years, articles) {
library(animation)
ani.options(interval=.2)
saveGIF({
layout(matrix(c(1, rep(2, 5)), 6, 1))
# Adjust the margins a little
par(mar=c(0,0,1,0))
for (j in Years) {
par(fg=1)
shp = article_maps(j, articles)
map_studied(shp, j)
}
}
,movie.name="studied.gif", ani.height=400, ani.width=800
) #SaveGIF
}
Years = 1996:2015
make_studied_gif(Years, articles)
j = 2004
shp = article_maps(j, articles)
map_studied(shp, j)
article_maps = function(year, articles) {
REG = world
articles_y = articles[substr(articles$date.1, 1, 4) == as.character(year),]
Studied = colSums(articles[,studies])
Authoring = colSums(articles[,authors])
SelfStudied = colSums(articles[,locals])
countryBase = data.frame(countries, Studied, Authoring, SelfStudied)
REG@data = data.frame(REG@data, countryBase[match(REG@data$CNTR_ID,countryBase$countries), ])
REG@data$StudiedAtAll = ifelse(REG@data$Studied >= 1, "#1C6F91", "lightgrey")
REG@data$AuthoringAtAll = ifelse(REG@data$Authoring >= 1, "orange", "lightgrey")
REG@data$SelfStudiedAtAll = ifelse(REG@data$SelfStudied >= 1,  "grey20", "lightgrey")
return(REG)
}
shp = article_maps(j, articles)
map_studied(shp, j)
REG = world
head(REG@data)
articles_y = articles[substr(articles$date.1, 1, 4) == as.character(year),]
year=2004
articles_y = articles[substr(articles$date.1, 1, 4) == as.character(year),]
articles_y
dim(articles_y)
article_maps = function(year, articles) {
REG = world
articles_y = articles[substr(articles$date.1, 1, 4) == as.character(year),]
Studied = colSums(articles_y[,studies])
Authoring = colSums(articles_y[,authors])
SelfStudied = colSums(articles_y[,locals])
countryBase = data.frame(countries, Studied, Authoring, SelfStudied)
REG@data = data.frame(REG@data, countryBase[match(REG@data$CNTR_ID,countryBase$countries), ])
REG@data$StudiedAtAll = ifelse(REG@data$Studied >= 1, "#1C6F91", "lightgrey")
REG@data$AuthoringAtAll = ifelse(REG@data$Authoring >= 1, "orange", "lightgrey")
REG@data$SelfStudiedAtAll = ifelse(REG@data$SelfStudied >= 1,  "grey20", "lightgrey")
return(REG)
}
shp = article_maps(j, articles)
map_studied(shp, j)
Years = 1996:2015
make_studied_gif(Years, articles)
#nettoyage des dev
while( length(dev.list())!=0){
dev.off()
}
article_maps = function(year, articles) {
REG = world
if (year == 2016) {
articles_y = articles
} else {
articles_y = articles[substr(articles$date.1, 1, 4) == as.character(year),]
}
Studied = colSums(articles_y[,studies])
Authoring = colSums(articles_y[,authors])
SelfStudied = colSums(articles_y[,locals])
countryBase = data.frame(countries, Studied, Authoring, SelfStudied)
REG@data = data.frame(REG@data, countryBase[match(REG@data$CNTR_ID,countryBase$countries), ])
REG@data$StudiedAtAll = ifelse(REG@data$Studied >= 1, "#1C6F91", "lightgrey")
REG@data$AuthoringAtAll = ifelse(REG@data$Authoring >= 1, "orange", "lightgrey")
REG@data$SelfStudiedAtAll = ifelse(REG@data$SelfStudied >= 1,  "grey20", "lightgrey")
return(REG)
}
map_studied = function(shp, year) {
if (year == 2016) year = "1996-2015"
REG = shp
par(mfrow=c(1,1), mar = c(0,0,1,0))
plot(REG, col=REG@data$StudiedAtAll, border="white")
title(paste0("Countries studied in Cybergeo articles | ", year))
# plot(REG, col=REG@data$AuthoringAtAll, border="white")
#  title(paste0("Countries authoring Cybergeo articles | ", Year))
# plot(REG, col=REG@data$SelfStudiedAtAll, border="white")
#  title(paste0("Countries studied by locals in Cybergeo articles | ", Year))
}
make_studied_gif <- function (years, articles) {
library(animation)
ani.options(interval=.2)
saveGIF({
layout(matrix(c(1, rep(2, 5)), 6, 1))
# Adjust the margins a little
par(mar=c(0,0,1,0))
for (j in Years) {
par(fg=1)
shp = article_maps(j, articles)
map_studied(shp, j)
}
}
,movie.name="studied.gif", ani.height=400, ani.width=800
) #SaveGIF
}
j = 2016
shp = article_maps(j, articles)
map_studied(shp, j)
Years = 1996:2016
make_studied_gif(Years, articles)
map_authoring = function(shp, year) {
if (year == 2016) year = "1996-2015"
REG = shp
par(mfrow=c(1,1), mar = c(0,0,1,0))
#plot(REG, col=REG@data$StudiedAtAll, border="white")
#title(paste0("Countries studied in Cybergeo articles | ", year))
plot(REG, col=REG@data$AuthoringAtAll, border="white")
title(paste0("Countries authoring Cybergeo articles | ", Year))
# plot(REG, col=REG@data$SelfStudiedAtAll, border="white")
#  title(paste0("Countries studied by locals in Cybergeo articles | ", Year))
}
make_authoring_gif <- function (years, articles) {
library(animation)
ani.options(interval=.2)
saveGIF({
layout(matrix(c(1, rep(2, 5)), 6, 1))
# Adjust the margins a little
par(mar=c(0,0,1,0))
for (j in Years) {
par(fg=1)
shp = article_maps(j, articles)
map_authoring(shp, j)
}
}
,movie.name="studied.gif", ani.height=400, ani.width=800
) #SaveGIF
}
Years = 1996:2016
make_authoring_gif(Years, articles)
make_authoring_gif <- function (years, articles) {
library(animation)
ani.options(interval=.5)
saveGIF({
layout(matrix(c(1, rep(2, 5)), 6, 1))
# Adjust the margins a little
par(mar=c(0,0,1,0))
for (j in Years) {
par(fg=1)
shp = article_maps(j, articles)
map_authoring(shp, j)
}
}
,movie.name="authoring.gif", ani.height=400, ani.width=800
) #SaveGIF
}
Years = 1996:2016
make_authoring_gif(Years, articles)
map_authoring = function(shp, year) {
if (year == 2016) year = "1996-2015"
REG = shp
par(mfrow=c(1,1), mar = c(0,0,1,0))
#plot(REG, col=REG@data$StudiedAtAll, border="white")
#title(paste0("Countries studied in Cybergeo articles | ", year))
plot(REG, col=REG@data$AuthoringAtAll, border="white")
title(paste0("Countries authoring Cybergeo articles | ", year))
# plot(REG, col=REG@data$SelfStudiedAtAll, border="white")
#  title(paste0("Countries studied by locals in Cybergeo articles | ", Year))
}
make_authoring_gif <- function (years, articles) {
library(animation)
ani.options(interval=.5)
saveGIF({
layout(matrix(c(1, rep(2, 5)), 6, 1))
# Adjust the margins a little
par(mar=c(0,0,1,0))
for (j in Years) {
par(fg=1)
shp = article_maps(j, articles)
map_authoring(shp, j)
}
}
,movie.name="authoring.gif", ani.height=400, ani.width=800
) #SaveGIF
}
Years = 1996:2016
make_authoring_gif(Years, articles)
make_authoring_gif(Years, articles)
library(wordcloud)
library(tm)
library(rgeos)
library(rgdal)
library(ggplot2)
library(RODBC)
Years = 1996:2015
path = "/Users/clementinecottineau/Documents/cybergeo20/R_Country_Wordcloud/"
# REG = readOGR(dsn=paste(path, "FRA_adm/FRA_adm1.shp", sep=""),
#               layer = "FRA_adm1", encoding="utf8")
world = readOGR(dsn=paste(path, "world/world.shp", sep=""),
layer = "world", encoding="utf8")
plot(world)
REG = world
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
#
articles = read.csv("/Users/clementinecottineau/Documents/cybergeo20/R_Country_Wordcloud/articles_Contingency.csv", sep=",", dec=".")
# head(articles)
#
#Year = 1998
#articles = articles[as.numeric(substr(articles$date.1)) == Year ,]
#nettoyage des dev
while( length(dev.list())!=0){
dev.off()
}
article_maps = function(year, articles) {
REG = world
if (year == 2016) {
articles_y = articles
} else {
articles_y = articles[substr(articles$date.1, 1, 4) == as.character(year),]
}
Studied = colSums(articles_y[,studies])
Authoring = colSums(articles_y[,authors])
SelfStudied = colSums(articles_y[,locals])
countryBase = data.frame(countries, Studied, Authoring, SelfStudied)
REG@data = data.frame(REG@data, countryBase[match(REG@data$CNTR_ID,countryBase$countries), ])
REG@data$StudiedAtAll = ifelse(REG@data$Studied >= 1, "#1C6F91", "lightgrey")
REG@data$AuthoringAtAll = ifelse(REG@data$Authoring >= 1, "orange", "lightgrey")
REG@data$SelfStudiedAtAll = ifelse(REG@data$SelfStudied >= 1,  "grey20", "lightgrey")
return(REG)
}
map_studied = function(shp, year) {
if (year == 2016) year = "1996-2015"
REG = shp
par(mfrow=c(1,1), mar = c(0,0,1,0))
plot(REG, col=REG@data$StudiedAtAll, border="white")
title(paste0("Countries studied in Cybergeo articles | ", year))
# plot(REG, col=REG@data$AuthoringAtAll, border="white")
#  title(paste0("Countries authoring Cybergeo articles | ", Year))
# plot(REG, col=REG@data$SelfStudiedAtAll, border="white")
#  title(paste0("Countries studied by locals in Cybergeo articles | ", Year))
}
make_studied_gif <- function (years, articles) {
library(animation)
ani.options(interval=.5)
saveGIF({
layout(matrix(c(1, rep(2, 5)), 6, 1))
# Adjust the margins a little
par(mar=c(0,0,1,0))
for (j in Years) {
par(fg=1)
shp = article_maps(j, articles)
map_studied(shp, j)
}
}
,movie.name="studied.gif", ani.height=800, ani.width=1600
) #SaveGIF
}
Years = 1996:2016
make_studied_gif(Years, articles)
make_studied_gif <- function (years, articles) {
library(animation)
ani.options(interval=.5)
saveGIF({
layout(matrix(c(1, rep(2, 5)), 6, 1))
# Adjust the margins a little
par(mar=c(0,0,1,0))
for (j in Years) {
par(fg=1)
shp = article_maps(j, articles)
map_studied(shp, j)
}
}
,movie.name="studied.gif", ani.height=400, ani.width=800
) #SaveGIF
}
Years = 1996:2016
make_studied_gif(Years, articles)
shiny::runApp('Documents/cybergeo20/Cybergeo20')
tabflow
cybterms = read.csv("/Users/clementinecottineau/Documents/cybergeo20/Data/raw/terms.csv", sep=";", dec=".")
lookup = data.frame(countries)
lookup$polyID = as.numeric(rownames(lookup)) - 1
cybterms$idterm = rownames(cybterms)
cybterms2 = data.frame(cybterms, articles[match(cybterms$id,articles$id), ])
cybterms3 = data.frame(cybterms2, lookup[match(cybterms2$firstauthor,lookup$countries), ])
cybterms4 = cybterms3[complete.cases(cybterms3$id.1),]
#summary(cybterms4, 20)
cybterms5 = cybterms4[with(cybterms4, order(-count)),]
keywordsPO = cybterms5[,]
#summary(keywordsPO)
LOC=NULL
ID = as.numeric(keywordsPO$idterm)
WORDS = keywordsPO$term
FREQ = as.numeric(keywordsPO$count)
CountryName = keywordsPO$countries
IDREG = as.numeric(keywordsPO$polyID)
LOC = data.frame(ID, WORDS, IDREG, FREQ, CountryName)
LOC$IDPOL = LOC$IDREG + 1
#LOC
LOC = subset(LOC, !is.na(IDPOL))
#LOC$RFREQ = LOC$FREQ / LOC$Total
isIDmax <- with(LOC, ave(FREQ, CountryName, FUN=function(x) seq_along(x)==which.max(x)))==1
LOC = LOC[isIDmax, ] # most common word by country
ids = unique(LOC$IDPOL)
x=data.frame()
y=data.frame()
z=data.frame()
for (i in ids) {
x[i,"X"] = REG@polygons[[i]]@labpt[[1]] # Barycentre
y[i,"Y"] = REG@polygons[[i]]@labpt[[2]]
z[i,"Total"] = sum(LOC[LOC$IDPOL == i,]$FREQ)
}
x$IDPOL = rownames(x)
y$IDPOL = rownames(y)
z$IDPOL = rownames(z)
x= x[complete.cases(x),]
y= y[complete.cases(y),]
z= z[complete.cases(z),]
LOC = merge(LOC, x, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, y, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, z, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC
x <- LOC[,"X"]
y <- LOC[,"Y"]
w <- LOC[,"WORDS"]
f = LOC[,"FREQ"]
par(mfrow=c(1,1), mar = c(0,0,1,0))
plot(REG, col="grey", border=F)
text(x,y,w, cex = 0.001 * f)
title(paste0("Frequency of the most frequent word | ", Year))
LOC=NULL
ID = as.numeric(keywordsPO$idterm)
WORDS = keywordsPO$term
FREQ = as.numeric(keywordsPO$count)
CountryName = keywordsPO$countries
IDREG = as.numeric(keywordsPO$polyID)
LOC = data.frame(ID, WORDS, IDREG, FREQ, CountryName)
LOC$IDPOL = LOC$IDREG + 1
#LOC
LOC = subset(LOC, !is.na(IDPOL))
isIDmin <- with(LOC, ave(FREQ, CountryName, FUN=function(x) seq_along(x)==which.min(x)))==1
LOC = LOC[isIDmin, ] # most common word by country
ids = unique(LOC$IDPOL)
x=data.frame()
y=data.frame()
z=data.frame()
for (i in ids) {
x[i,"X"] = REG@polygons[[i]]@labpt[[1]] # Barycentre
y[i,"Y"] = REG@polygons[[i]]@labpt[[2]]
z[i,"Total"] = sum(LOC[LOC$IDPOL == i,]$FREQ)
}
x$IDPOL = rownames(x)
y$IDPOL = rownames(y)
z$IDPOL = rownames(z)
x= x[complete.cases(x),]
y= y[complete.cases(y),]
z= z[complete.cases(z),]
LOC = merge(LOC, x, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, y, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, z, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC
x <- LOC[,"X"]
y <- LOC[,"Y"]
w <- LOC[,"WORDS"]
f = LOC[,"FREQ"]
par(mfrow=c(1,1), mar = c(0,0,1,0))
plot(REG, col="grey", border=F)
text(x,y,w, cex = 0.6)
title(paste0("The least frequent words | ", Year))
country_Mat = data.frame()
i = 0
j = 0
for (c_a in countries) {
i =i+1
for (c_s in countries) {
j = j+1
f = 0
if (1 %in% rownames(table(articles[,paste0("A_",c_a)], articles[,paste0("S_",c_s)]))){
if (1 %in% colnames(table(articles[,paste0("A_",c_a)], articles[,paste0("S_",c_s)]))){
f = table(articles[,paste0("A_",c_a)], articles[,paste0("S_",c_s)])[2,2]
}}
country_Mat[i,j] = f
}
j = 0 }
colnames(country_Mat) = countries
rownames(country_Mat) = countries
country_Mat_df = country_Mat
country_Mat = as.matrix(country_Mat)
write.csv(country_Mat_df, paste0(path, "matrix_countryAuthoringToCountryStudied.csv"))
tabflow<-melt(country_Mat)
names(tabflow)=c("A","S","Articles")
head(tabflow, 4)
lookup = data.frame(countries)
x=c()
y=c()
for (i in 1:256) {
x[[i]] = REG@polygons[[i]]@labpt[[1]] # Barycentre
y[[i]] = REG@polygons[[i]]@labpt[[2]]
}
lookup$x = x
lookup$y = y
tabflow =  data.frame(tabflow, lookup[match(tabflow$A,lookup$countries), ])
tabflow =  data.frame(tabflow, lookup[match(tabflow$S,lookup$countries), ])
tabflow= tabflow[complete.cases(tabflow$A),]
tabflow= tabflow[complete.cases(tabflow$S),]
colnames(tabflow) = c("Authoring", "Studied", "N", "c1", "X_A", "Y_A", "c2",  "X_S", "Y_S")
tabflow = subset(tabflow, N > 0)
tabflow = subset(tabflow, Authoring != Studied)
par(mfrow=c(1,1), mar = c(0,0,1,0))
plot(REG, col="lightgrey", border=F)
Arrows(tabflow$X_A,tabflow$Y_A,tabflow$X_S,tabflow$Y_S, lwd = 0.5, col = "indianred3", code=2, arr.adj = 1 ,arr.type = "curved")
title("Who studies who? | 1996-2015")
write.csv(tabflow, paste0(path, "df_countryAuthoringToCountryStudied.csv"))
tabflow
par(mfrow=c(1,1), mar = c(0,0,1,0))
plot(REG, col="lightgrey", border=F)
Arrows(tabflow$X_A,tabflow$Y_A,tabflow$X_S,tabflow$Y_S, lwd = 0.5, col = "indianred3", code=2, arr.adj = 1 ,arr.type = "curved")
title("Who studies who? | 1996-2015")
library(wordcloud)
library(tm)
library(rgeos)
library(rgdal)
library(ggplot2)
library(RODBC)
library(reshape2)
library(maptools)
library(rCarto)
library(RColorBrewer)
library(shape)
par(mfrow=c(1,1), mar = c(0,0,1,0))
plot(REG, col="lightgrey", border=F)
Arrows(tabflow$X_A,tabflow$Y_A,tabflow$X_S,tabflow$Y_S, lwd = 0.5, col = "indianred3", code=2, arr.adj = 1 ,arr.type = "curved")
title("Who studies who? | 1996-2015")
library(shape)
install.packages("shape")
library(shape)
par(mfrow=c(1,1), mar = c(0,0,1,0))
plot(REG, col="lightgrey", border=F)
Arrows(tabflow$X_A,tabflow$Y_A,tabflow$X_S,tabflow$Y_S, lwd = 0.5, col = "indianred3", code=2, arr.adj = 1 ,arr.type = "curved")
title("Who studies who? | 1996-2015")
plot(REG, col="lightgrey", border=F)
Arrows(tabflow$X_A,tabflow$Y_A,tabflow$X_S,tabflow$Y_S, lwd = 0.1, col = "indianred3", code=2, arr.adj = 1 ,arr.type = "curved")
plot(REG, col="lightgrey", border=F)
Arrows(tabflow$X_A,tabflow$Y_A,tabflow$X_S,tabflow$Y_S, lwd = 0.25, col = "indianred3", code=2, arr.adj = 1 ,arr.type = "curved")
title("Who studies who? | 1996-2015")
setwd("~/Documents/cybergeo20/LDA")
load("/Users/clementinecottineau/Documents/cybergeo20/Cybergeo20/data/CyberData.RData")
>
shiny::runApp('~/Documents/cybergeo20/Cybergeo20')
shiny::runApp('~/Documents/cybergeo20/Cybergeo20')
