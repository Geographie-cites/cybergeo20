cols[substr(cols,1, 1) == "V"]
c = length(cols)
cols[c-20 : c]
c20 = length(cols)
c1 = c - 19
cols[c1:c20]
sumsByTheme = colSums(articlesDF[themes])
c20 = length(cols)
c1 = c - 19
themes =  cols[c1:c20]
sumsByTheme = colSums(articlesDF[themes])
sumsByTheme
sumsByTheme = colSums(articlesDF[themes], na.rm = T)
sumsByTheme
names(sumsByTheme) = paste0("T", 1:20)
sumsByTheme
sort(s)
sort(sumsByTheme)
sort(sumsByTheme, decreasing = T)
names(sumsByTheme) = paste0("T_", 1:20)
sort(sumsByTheme, decreasing = T)
sortesThemes = sort(sumsByTheme, decreasing = T)
sortesThemes
sortedThemes = sort(sumsByTheme, decreasing = T)
themeDescription[as.numeric(substr(names(sortedThemes)[1]),]
themeDescription[as.numeric(substr(names(sortedThemes)[1])),]
substr(names(sortedThemes)[1], 3, 3)
themeDescription[as.numeric(substr(names(sortedThemes)[1], 3, 3)),]
runApp()
topTheme = themeDescription[as.numeric(substr(names(sortedThemes)[1], 3, 3)),]
str(topTheme)
topTheme = themeDescription[as.numeric(substr(names(sortedThemes)[1], 3, 3)),2]
str(topTheme)
topTheme
runApp()
topTheme = as.character(topTheme)
topTheme
runApp()
sumsByTheme = colSums(articlesDF[,themes], na.rm = T)
sumsByTheme
runApp()
themes
colSums(articlesDF[,themes], na.rm = T)
paste0("T_", 1:20)
themes =  cols[paste0("T_", 1:20)]
themes
themes =  paste0("T_", 1:20)
colSums(articlesDF[,themes], na.rm = T)
runApp()
head(articlesDF)
sumsCitations = colSums(articlesDF[,c("citedby", "citing")], na.rm = T)
as.numeric(sumsCitations[1])
as.numeric(sumsCitations[1])
as.numeric(sumsCitations[2])
runApp()
shiny::runApp()
shiny::runApp()
setwd("~/Documents/cybergeo20/CybergeoNetworks/data")
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
setwd("~/Documents/cybergeo20/CybergeoNetworks")
justeTerms = read.csv("data/docprobasJuste2.csv", sep=",", dec=".")
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
countries
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
lookup = data.frame(countries)
lookup$polyID = as.numeric(rownames(lookup)) - 1
shiny::runApp()
plot(world)
plot(world, color = world@data$NAME)
plot(world, col = world@data$NAME)
shiny::runApp()
load("data/CyberData.RData")
allArticles <- cyberData$ARTICLES
years = yearValues$years
years=1998
articles = allArticles[substr(allArticles$date.1, 1, 4) %in% as.character(years),]
articles = merge(articles, files, by = "id" , all.x = T, all.y = F)
load("data/themesPO.Rdata")
files$name = NULL
files$path = NULL
files[,3:22] = document.themes
colnames(files)[3:22] = paste0("T_", 1:20)
articles = merge(articles, files, by = "id" , all.x = T, all.y = F)
selectedArticles = articles
Studied = colSums(selectedArticles[,studies])
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
lookup = data.frame(countries)
lookup$polyID = as.numeric(rownames(lookup)) - 1
locals
Studied = colSums(selectedArticles[,studies])
head(selectedArticles)
selectedArticles[,studies]
studies
authors
selectedArticles[,authors]
world = readOGR(dsn="data/world_SimplifiedGeom.shp",
layer = "world_SimplifiedGeom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
str(locals)
str(world@data)
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
str(locals)
str(world@data)
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
head(selectedArticles)
selectedArticles[,locals]
local10 = locals[1:10]
selectedArticles[,local10]
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
world2 = readOGR(dsn="data/world_SimplifiedGeom.shp",
layer = "world_SimplifiedGeom", encoding="utf8", verbose = F)
countries2 = as.character(world2@data$CNTR_ID)
locals2 = paste0("L_", countries2)
authors2 = paste0("A_", countries2)
studies2 = paste0("S_", countries2)
locals %in% locals2
locals2 %in% locals
data.frame(locals2, locals2 %in% locals)
data.frame(locals, locals %in% locals2)
summary(articles)
data.frame(locals, locals %in% locals2)
shiny::runApp()
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
countries
shiny::runApp()
load("data/CyberData.RData")
load("data/themesPO.Rdata")
files$name = NULL
files$path = NULL
files[,3:22] = document.themes
colnames(files)[3:22] = paste0("T_", 1:20)
themeDescription = read.csv("data/20themes20words.csv", sep=",", dec=".")
articles = data.frame()
paletteCybergeo = c("#1C6F91", "#df691a", "#77c5ba", "orange", "#2db92d", "#e1ff2f", "#ff2313", "#bbab61")
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
lookup = data.frame(countries)
lookup$polyID = as.numeric(rownames(lookup)) - 1
justeTerms = read.csv("data/docprobasJuste2.csv", sep=",", dec=".")
hadriTerms = read.csv("data/kwprop.csv", sep=",", dec=".")
allArticles <- cyberData$ARTICLES
years = yearValues$years
articles = allArticles[substr(allArticles$date.1, 1, 4) %in% as.character(years),]
articles = merge(articles, files, by = "id" , all.x = T, all.y = F)
selectedArticles = articles
Studied = colSums(selectedArticles[,studies])
Authoring = colSums(selectedArticles[,authors])
SelfStudied = colSums(selectedArticles[,locals])
countryBase = data.frame(countries, Studied, Authoring, SelfStudied)
selectedArticles[,studies]
studies
Studied = colSums(selectedArticles[,studies[1:10]])
selectedArticles[,studies[10:20]]
selectedArticles[,studies[20:30]]
selectedArticles[,studies[30:40]]
selectedArticles[,studies[40:50]]
selectedArticles[,studies[50:60]]
selectedArticles[,studies[51]]
selectedArticles[,studies[52]]
selectedArticles[,studies[53]]
selectedArticles[,studies[54]]
selectedArticles[,studies[55]]
selectedArticles[,studies[56]]
selectedArticles[,studies[57]]
selectedArticles[,studies[58]]
selectedArticles[,studies[59]]
selectedArticles[,studies[60]]
studies[60]
countries = as.character(world@data$CNTR_ID)
selectedArticles[,studies[61:168]]
selectedArticles[,studies[61:70]]
selectedArticles[,studies[71:80]]
selectedArticles[,studies[81:90]]
selectedArticles[,studies[91:100]]
selectedArticles[,studies[101:110]]
selectedArticles[,studies[111:120]]
selectedArticles[,studies[121:130]]
selectedArticles[,studies[131:140]]
selectedArticles[,studies[141:150]]
selectedArticles[,studies[151:160]]
selectedArticles[,studies[161:170]]
selectedArticles[,studies[161:167]]
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("lubridate")
shiny::runApp()
themeDescription = read.csv("data/20themes20words.csv", sep=",", dec=".")
themeDescription
themeDescription = read.csv("data/20themes20words.csv", sep=",", dec=".")
nameThemes = themeDescription$NAME
nameThemes
shiny::runApp()
shiny::runApp()
nameThemes
shiny::runApp()
load("data/CyberData.RData")
load("data/themesPO.Rdata")
files$name = NULL
files$path = NULL
files[,3:22] = document.themes
#colnames(files)[3:22] = paste0("T_", 1:20)
themeDescription = read.csv("data/20themes20words.csv", sep=",", dec=".")
nameThemes = themeDescription$NAME
colnames(files)[3:22] = nameThemes
articles = data.frame()
paletteCybergeo = c("#1C6F91", "#df691a", "#77c5ba", "orange", "#2db92d", "#e1ff2f", "#ff2313", "#bbab61")
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
lookup = data.frame(countries)
lookup$polyID = as.numeric(rownames(lookup)) - 1
justeTerms = read.csv("data/docprobasJuste2.csv", sep=",", dec=".")
hadriTerms = read.csv("data/kwprop.csv", sep=",", dec=".")
pattern_list <- c("espace", "territoire", "environnement", "société", "réseau", "interaction", "aménagement", "urbanisme", "carte", "modèle", "système", "SIG", "fractale", "durabilité", "représentation", "migration", "quantitatif", "qualitatif", "post-moderne")
nameThemes
files
load("data/CyberData.RData")
load("data/themesPO.Rdata")
files$name = NULL
files$path = NULL
files[,3:22] = document.themes
#colnames(files)[3:22] = paste0("T_", 1:20)
themeDescription = read.csv("data/20themes20words.csv", sep=",", dec=".")
nameThemes = themeDescription$NAME
colnames(files)[3:22] = nameThemes
articles = data.frame()
paletteCybergeo = c("#1C6F91", "#df691a", "#77c5ba", "orange", "#2db92d", "#e1ff2f", "#ff2313", "#bbab61")
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
lookup = data.frame(countries)
lookup$polyID = as.numeric(rownames(lookup)) - 1
justeTerms = read.csv("data/docprobasJuste2.csv", sep=",", dec=".")
hadriTerms = read.csv("data/kwprop.csv", sep=",", dec=".")
pattern_list <- c("espace", "territoire", "environnement", "société", "réseau", "interaction", "aménagement", "urbanisme", "carte", "modèle", "système", "SIG", "fractale", "durabilité", "représentation", "migration", "quantitatif", "qualitatif", "post-moderne")
document.themes
load("data/CyberData.RData")
load("data/themesPO.Rdata")
files$name = NULL
files$path = NULL
themeDescription = read.csv("data/20themes20words.csv", sep=",", dec=".")
nameThemes = themeDescription$NAME
colnames(document.themes) = nameThemes
files[,3:22] = document.themes
#colnames(files)[3:22] = paste0("T_", 1:20)
#colnames(files)[3:22] = nameThemes
dim(document.themes)
length(nameThemes)
nameThemes = c(themeDescription$NAME, "Other")
shiny::runApp()
nameThemes
themeDescription$NAME
nameThemes = c(as.charater(themeDescription$NAME), "Other")
nameThemes = c(as.character(themeDescription$NAME), "Other")
nameThemes
shiny::runApp()
load("data/CyberData.RData")
load("data/themesPO.Rdata")
files$name = NULL
files$path = NULL
themeDescription = read.csv("data/20themes20words.csv", sep=",", dec=".")
nameThemes = c(as.character(themeDescription$NAME), "Other")
colnames(document.themes) = nameThemes
files[,3:22] = document.themes
#colnames(files)[3:22] = paste0("T_", 1:20)
#colnames(files)[3:22] = nameThemes
articles = data.frame()
paletteCybergeo = c("#1C6F91", "#df691a", "#77c5ba", "orange", "#2db92d", "#e1ff2f", "#ff2313", "#bbab61")
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
lookup = data.frame(countries)
lookup$polyID = as.numeric(rownames(lookup)) - 1
justeTerms = read.csv("data/docprobasJuste2.csv", sep=",", dec=".")
hadriTerms = read.csv("data/kwprop.csv", sep=",", dec=".")
pattern_list <- c("espace", "territoire", "environnement", "société", "réseau", "interaction", "aménagement", "urbanisme", "carte", "modèle", "système", "SIG", "fractale", "durabilité", "représentation", "migration", "quantitatif", "qualitatif", "post-moderne")
# set server ----
allArticles <- cyberData$ARTICLES
years = yearValues$years
articles = allArticles[substr(allArticles$date.1, 1, 4) %in% as.character(years),]
articles = merge(articles, files, by = "id" , all.x = T, all.y = F)
groupsOfCountries = 2
groupsOfCountries = 2
articles = cyberData$ARTICLES
tcr = studies
articlesWithThemes = data.frame(articles, files[match(articles$id,files$id), ])
articlesWithThemes
colNumbers = 2:21
themeNames = nameThemes
files
colnames(files)[3:22] = nameThemes
articlesWithThemes = data.frame(articles, files[match(articles$id,files$id), ])
colNumbers = 2:21
#themeNames =  paste0("T_", 1:20)
themeNames = nameThemes
cybterms = articlesWithThemes[,c("id",themeNames)]
cybterms
cybtermsbis = cybterms[complete.cases(cybterms[,themeNames]),]
cybterms2 = data.frame(cybtermsbis, articles[match(cybtermsbis$id,articles$id), ])
cybterms3 = data.frame(cybterms2, lookup[match(cybterms2$firstauthor,lookup$countries), ])
cybterms4 = cybterms3[complete.cases(cybterms3$id.1),]
shiny::runApp()
colNumbers = 2:21
aggregateCountriesBasedOnTerms = function(themesFile, themes, countries_to_aggregate, colNumbers){
themes_By_country_bf = data.frame("CountryID" = countries_to_aggregate)
themes_By_country_bf[,themes] = NA
themes_By_country_bf$n = NA
for (c in countries_to_aggregate){
articles_to_aggregate = themesFile[themesFile[,c] == 1,colNumbers]
if (!is.null(articles_to_aggregate)){
nArticles = dim(articles_to_aggregate)[1]
themes_By_country_bf[themes_By_country_bf$CountryID == c, themes] = colSums(articles_to_aggregate) / nArticles
themes_By_country_bf[themes_By_country_bf$CountryID == c, "n"] = nArticles
}}
themes_By_country_bf = themes_By_country_bf[complete.cases(themes_By_country_bf),]
themes_By_country_bf$CountryID = substr(themes_By_country_bf$CountryID, 3,4)
return(themes_By_country_bf)
}
cahCountriesBasedOnTerms = function(themes_By_country_bf, numberOfGroups, colNumbers){
themesScaled = scale(themes_By_country_bf[,colNumbers])
rownames(themesScaled) = themes_By_country_bf[,1]
d.themes = dist(themesScaled)
cah.themes = hclust(d.themes, method = "ward.D2")
groups_Country = cutree(cah.themes, k=numberOfGroups)
return(groups_Country)
}
sumNum = function(x){
y = sum(x, na.rm= T)
return(y)
}
stat.comp<-  function( x,y){
K <-length(unique(y))
n <-length(x)
m <-mean(x)
TSS <-sum((x-m)^2)
nk<-table(y)
mk<-tapply(x,y,mean)
BSS <-sum(nk* (mk-m)^2)
result<-c(mk,100.0*BSS/TSS)
names(result) <-c( paste("G",1:K),"% epl.")
return(result)
}
themes_By_country_bf = aggregateCountriesBasedOnTerms(themesFile = cybterms4, themes = themeNames, countries_to_aggregate = tcr, colNumbers = colNumbers)
cybterms4
articlesWithThemes = data.frame(articles, files[match(articles$id,files$id), ])
colNumbers = 2:21
#themeNames =  paste0("T_", 1:20)
themeNames = nameThemes
cybterms = articlesWithThemes[,c("id",themeNames)]
cybtermsbis = cybterms[complete.cases(cybterms[,themeNames]),]
cybterms2 = data.frame(cybtermsbis, articles[match(cybtermsbis$id,articles$id), ])
cybterms3 = data.frame(cybterms2, lookup[match(cybterms2$firstauthor,lookup$countries), ])
cybterms4 = cybterms3[complete.cases(cybterms3$id.1),]
# load data ----
load("data/CyberData.RData")
load("data/themesPO.Rdata")
files$name = NULL
files$path = NULL
themeDescription = read.csv("data/20themes20words.csv", sep=",", dec=".")
nameThemes = c(as.character(themeDescription$NAME), "Other")
colnames(document.themes) = nameThemes
files[,3:22] = document.themes
#colnames(files)[3:22] = paste0("T_", 1:20)
colnames(files)[3:22] = nameThemes
articles = data.frame()
paletteCybergeo = c("#1C6F91", "#df691a", "#77c5ba", "orange", "#2db92d", "#e1ff2f", "#ff2313", "#bbab61")
world = readOGR(dsn="data/world_withZoom.shp",
layer = "world_withZoom", encoding="utf8", verbose = F)
countries = as.character(world@data$CNTR_ID)
locals = paste0("L_", countries)
authors = paste0("A_", countries)
studies = paste0("S_", countries)
lookup = data.frame(countries)
lookup$polyID = as.numeric(rownames(lookup)) - 1
justeTerms = read.csv("data/docprobasJuste2.csv", sep=",", dec=".")
hadriTerms = read.csv("data/kwprop.csv", sep=",", dec=".")
pattern_list <- c("espace", "territoire", "environnement", "société", "réseau", "interaction", "aménagement", "urbanisme", "carte", "modèle", "système", "SIG", "fractale", "durabilité", "représentation", "migration", "quantitatif", "qualitatif", "post-moderne")
articles = cyberData$ARTICLES
articlesWithThemes = data.frame(articles, files[match(articles$id,files$id), ])
colNumbers = 2:21
#themeNames =  paste0("T_", 1:20)
themeNames = nameThemes
cybterms = articlesWithThemes[,c("id",themeNames)]
cybtermsbis = cybterms[complete.cases(cybterms[,themeNames]),]
cybterms2 = data.frame(cybtermsbis, articles[match(cybtermsbis$id,articles$id), ])
cybterms3 = data.frame(cybterms2, lookup[match(cybterms2$firstauthor,lookup$countries), ])
cybterms4 = cybterms3[complete.cases(cybterms3$id.1),]
themes_By_country_bf = aggregateCountriesBasedOnTerms(themesFile = cybterms4, themes = themeNames, countries_to_aggregate = tcr, colNumbers = colNumbers)
cybterms4
themeNames
tcr
colNumbers
cybterms4
dim(cybterms4)
themesFile = cybterms4
themes = themeNames
countries_to_aggregate = tcr
colNumbers = colNumbers
themes_By_country_bf = data.frame("CountryID" = countries_to_aggregate)
themes_By_country_bf[,themes] = NA
themes_By_country_bf$n = NA
themes_By_country_bf
for (c in countries_to_aggregate){
articles_to_aggregate = themesFile[themesFile[,c] == 1,colNumbers]
if (!is.null(articles_to_aggregate)){
nArticles = dim(articles_to_aggregate)[1]
themes_By_country_bf[themes_By_country_bf$CountryID == c, themes] = colSums(articles_to_aggregate) / nArticles
themes_By_country_bf[themes_By_country_bf$CountryID == c, "n"] = nArticles
}}
for (c in countries_to_aggregate){
print(c)
articles_to_aggregate = themesFile[themesFile[,c] == 1,colNumbers]
if (!is.null(articles_to_aggregate)){
nArticles = dim(articles_to_aggregate)[1]
themes_By_country_bf[themes_By_country_bf$CountryID == c, themes] = colSums(articles_to_aggregate) / nArticles
themes_By_country_bf[themes_By_country_bf$CountryID == c, "n"] = nArticles
}}
c= countries_to_aggregate[1]
articles_to_aggregate = themesFile[themesFile[,c] == 1,colNumbers]
articles_to_aggregate
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("~/Documents/cybergeo20/CybergeoNetworks")
themeDescription = read.csv("data/20themes20words.csv", sep=",", dec=".")
nameThemes = c(as.character(themeDescription$NAME), "Other")
colnames(document.themes) = nameThemes
files[,3:22] = document.themes
colnames(files)[3:22] = nameThemes
load("data/CyberData.RData")
load("data/themesPO.Rdata")
files$name = NULL
files$path = NULL
themeDescription = read.csv("data/20themes20words.csv", sep=",", dec=".")
nameThemes = c(as.character(themeDescription$NAME), "Other")
colnames(document.themes) = nameThemes
files[,3:22] = document.themes
colnames(files)[3:22] = nameThemes
str(nameThemes)
nameThemes
files
shiny::runApp()
install.packages("mapproj")
runApp()
install.packages("maptools")
runApp()
install.packages("RCurl")
runApp()
install.packages("igraph")
runApp()
install.packages("RSQLite")
runApp()
install.packages("svgPanZoom")
runApp()
install.packages("wordcloud")
runApp()
runApp()
install.packages("lubridate")
runApp()
runApp()
install.packages("wordcloud")
runApp()
runApp()
runApp()
runApp()
