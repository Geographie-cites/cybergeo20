y=data.frame()
z=data.frame()
for (i in ids) {
x[i,"X"] = REG@polygons[[i]]@labpt[[1]] # Barycentre
xmin[i, "Xmin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
xmax[i, "Xmax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
y[i,"Y"] = REG@polygons[[i]]@labpt[[2]]
ymin[i, "Ymin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
ymax[i, "Ymax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
z[i,"Total"] = sum(LOC[LOC$IDPOL == i,]$FREQ)
}
x$IDPOL = rownames(x)
xmin$IDPOL = rownames(xmin)
xmax$IDPOL = rownames(xmax)
ymin$IDPOL = rownames(ymin)
ymax$IDPOL = rownames(ymax)
y$IDPOL = rownames(y)
z$IDPOL = rownames(z)
x= x[complete.cases(x),]
xmin= ymin[complete.cases(xmin),]
xmax= ymax[complete.cases(xmax),]
ymin= ymin[complete.cases(ymin),]
ymax= ymax[complete.cases(ymax),]
y= y[complete.cases(y),]
z= z[complete.cases(z),]
LOC = merge(LOC, x, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, y, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, z, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC$RFREQ = LOC$FREQ / LOC$Total
LOC$WIDTH = nchar(as.character(LOC$WORDS), type = "width")
LOC
LOC$Random = runif(dim(LOC)[[1]], 0, 1)
LOC$NewY = ifelse(LOC$RFREQ < 1, LOC$Random * LOC$Ymin + (1-LOC$Random) * LOC$Ymax,LOC$Y)
LOC
xmin
rownames(xmin)
min(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
xmin
LOC=NULL
ID = c(1,2,3,4)
WORDS = c("Veranda", "Bulle", "Charlie", "Paper")
IDREG = c(1, 11,11, 3)
FREQ = c(3, 1, 2,1)
LOC = data.frame(ID, WORDS, IDREG, FREQ)
LOC$IDPOL = LOC$IDREG + 1
ids = unique(LOC$IDPOL)
x=data.frame()
ymin=data.frame()
ymax=data.frame()
xmin=data.frame()
xmax=data.frame()
y=data.frame()
z=data.frame()
for (i in ids) {
x[i,"X"] = REG@polygons[[i]]@labpt[[1]] # Barycentre
xmin[i, "Xmin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
xmax[i, "Xmax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
y[i,"Y"] = REG@polygons[[i]]@labpt[[2]]
ymin[i, "Ymin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
ymax[i, "Ymax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
z[i,"Total"] = sum(LOC[LOC$IDPOL == i,]$FREQ)
}
x$IDPOL = rownames(x)
xmin$IDPOL = rownames(xmin)
xmax$IDPOL = rownames(xmax)
ymin$IDPOL = rownames(ymin)
ymax$IDPOL = rownames(ymax)
y$IDPOL = rownames(y)
z$IDPOL = rownames(z)
x= x[complete.cases(x),]
xmin= xmin[complete.cases(xmin),]
xmax= xmax[complete.cases(xmax),]
ymin= ymin[complete.cases(ymin),]
ymax= ymax[complete.cases(ymax),]
y= y[complete.cases(y),]
z= z[complete.cases(z),]
LOC = merge(LOC, x, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, y, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, z, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC$RFREQ = LOC$FREQ / LOC$Total
LOC$WIDTH = nchar(as.character(LOC$WORDS), type = "width")
LOC
LOC$Random = runif(dim(LOC)[[1]], 0, 1)
LOC$NewY = ifelse(LOC$RFREQ < 1, LOC$Random * LOC$Ymin + (1-LOC$Random) * LOC$Ymax,LOC$Y)
LOC
fn = (LOC[,"Xmax"] -  LOC[,"Xmin"]) * n
plot(REG)
text(x,y,w, cex = fn)
fn = (LOC[,"Xmax"] -  LOC[,"Xmin"]) * 10 / n
text(x,y,w, cex = fn)
fn = floor(LOC[,"Xmax"] -  LOC[,"Xmin"]) / n
text(x,y,w, cex = fn)
fn
fn = trunc(LOC[,"Xmax"] -  LOC[,"Xmin"]) / n
text(x,y,w, cex = fn)
W = nchar(mostCitedWord, type = "width")
text(x,y,w, cex = fn)
fn
fn = trunc(LOC[,"Xmax"] -  LOC[,"Xmin"]) / n
fn
LOC[,"Xmax"] -  LOC[,"Xmin"]
fn = trunc(LOC[,"Xmax"] -  LOC[,"Xmin"] * 10) / n
fn
LOC[,"Xmax"] -  LOC[,"Xmin"]
fn = floor(width, digits = 0) / n
width = LOC[,"Xmax"] -  LOC[,"Xmin"]
fn = floor(width, digits = 0) / n
fn = round(width, digits = 0) / n
fn
width = LOC[,"Xmax"] -  LOC[,"Xmin"]
fn = round(width, digits = 0) / n
fn
fn = as.integer(width) / n
text(x,y,w, cex = fn)
fn = width / n
fn
str(fn)
text(x,y,w, cex = fn)
plot(REG)
x <- LOC[,"X"]
y <- LOC[,"NewY"]
w <- LOC[,"WORDS"]
f = LOC[,"RFREQ"]
text(x,y,w, cex = fn)
plot(REG)
fn = width * 10 / n
text(x,y,w, cex = fn)
for (i in ids) {
x[i,"X"] = REG@polygons[[i]]@labpt[[1]] # Barycentre
xmin[i, "Xmin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
xmax[i, "Xmax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
y[i,"Y"] = REG@polygons[[i]]@labpt[[2]]
ymin[i, "Ymin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
ymax[i, "Ymax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
z[i,"Total"] = sum(LOC[LOC$IDPOL == i,]$FREQ)
}
LOC=NULL
ID = c(1,2,3,4)
WORDS = c("Veranda", "Bulle", "Charlie", "Paper")
IDREG = c(1, 11,11, 3)
FREQ = c(3, 1, 2,1)
LOC = data.frame(ID, WORDS, IDREG, FREQ)
LOC$IDPOL = LOC$IDREG + 1
ids = unique(LOC$IDPOL)
x=data.frame()
ymin=data.frame()
ymax=data.frame()
xmin=data.frame()
xmax=data.frame()
y=data.frame()
z=data.frame()
for (i in ids) {
x[i,"X"] = REG@polygons[[i]]@labpt[[1]] # Barycentre
xmin[i, "Xmin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
xmax[i, "Xmax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
y[i,"Y"] = REG@polygons[[i]]@labpt[[2]]
ymin[i, "Ymin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
ymax[i, "Ymax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
z[i,"Total"] = sum(LOC[LOC$IDPOL == i,]$FREQ)
}
x$IDPOL = rownames(x)
xmin$IDPOL = rownames(xmin)
xmax$IDPOL = rownames(xmax)
ymin$IDPOL = rownames(ymin)
ymax$IDPOL = rownames(ymax)
y$IDPOL = rownames(y)
z$IDPOL = rownames(z)
x= x[complete.cases(x),]
xmin= xmin[complete.cases(xmin),]
xmax= xmax[complete.cases(xmax),]
ymin= ymin[complete.cases(ymin),]
ymax= ymax[complete.cases(ymax),]
y= y[complete.cases(y),]
z= z[complete.cases(z),]
LOC = merge(LOC, x, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, y, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, z, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC$RFREQ = LOC$FREQ / LOC$Total
LOC$WIDTH = nchar(as.character(LOC$WORDS), type = "width")
LOC$Random = runif(dim(LOC)[[1]], 0, 1)
LOC$NewY = ifelse(LOC$RFREQ < 1, LOC$Random * LOC$Ymin + (1-LOC$Random) * LOC$Ymax,LOC$Y)
LOC
plot(REG)
x <- LOC[,"X"]
y <- LOC[,"NewY"]
w <- LOC[,"WORDS"]
f = LOC[,"RFREQ"]
text(x,y,w, cex = f)
plot(REG)
n = LOC[,"WIDTH"]
width = LOC[,"Xmax"] -  LOC[,"Xmin"]
fn = width * 10 / n
str(fn)
text(x,y,w, cex = fn)
REG@polygons[[21]]@labpt
REG@polygons[[2]]@labpt[[1]]
REG@polygons[[1]]@ID
REG@polygons[[1]]@Polygons
REG@polygons[[i]]@Polygons[[1]]
LOC
LOC=NULL
ID = c(1,2,3,4)
WORDS = c("Veranda", "Bulle", "Charlie", "Paper")
IDREG = c(1, 11,11, 3)
FREQ = c(3, 1, 2,1)
LOC = data.frame(ID, WORDS, IDREG, FREQ)
LOC$IDPOL = LOC$IDREG + 1
ids = unique(LOC$IDPOL)
x=data.frame()
ymin=data.frame()
ymax=data.frame()
xmin=data.frame()
xmax=data.frame()
y=data.frame()
z=data.frame()
area=data.frame()
for (i in ids) {
x[i,"X"] = REG@polygons[[i]]@labpt[[1]] # Barycentre
xmin[i, "Xmin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
xmax[i, "Xmax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
y[i,"Y"] = REG@polygons[[i]]@labpt[[2]]
ymin[i, "Ymin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
ymax[i, "Ymax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
z[i,"Total"] = sum(LOC[LOC$IDPOL == i,]$FREQ)
area[i, "Area"] = max(REG@polygons[[i]]@Polygons[[1]]@area
}
x$IDPOL = rownames(x)
xmin$IDPOL = rownames(xmin)
xmax$IDPOL = rownames(xmax)
ymin$IDPOL = rownames(ymin)
ymax$IDPOL = rownames(ymax)
y$IDPOL = rownames(y)
z$IDPOL = rownames(z)
area$IDPOL = rownames(area)
x= x[complete.cases(x),]
area= area[complete.cases(area),]
xmin= xmin[complete.cases(xmin),]
xmax= xmax[complete.cases(xmax),]
ymin= ymin[complete.cases(ymin),]
ymax= ymax[complete.cases(ymax),]
y= y[complete.cases(y),]
z= z[complete.cases(z),]
LOC = merge(LOC, x, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, y, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, z, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, area, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC$RFREQ = LOC$FREQ / LOC$Total
LOC$WIDTH = nchar(as.character(LOC$WORDS), type = "width")
LOC$Random = runif(dim(LOC)[[1]], 0, 1)
LOC$NewY = ifelse(LOC$RFREQ < 1, LOC$Random * LOC$Ymin + (1-LOC$Random) * LOC$Ymax,LOC$Y)
LOC
LOC=NULL
ID = c(1,2,3,4)
WORDS = c("Veranda", "Bulle", "Charlie", "Paper")
IDREG = c(1, 11,11, 3)
FREQ = c(3, 1, 2,1)
LOC = data.frame(ID, WORDS, IDREG, FREQ)
LOC$IDPOL = LOC$IDREG + 1
ids = unique(LOC$IDPOL)
x=data.frame()
ymin=data.frame()
ymax=data.frame()
xmin=data.frame()
xmax=data.frame()
y=data.frame()
z=data.frame()
area=data.frame()
for (i in ids) {
x[i,"X"] = REG@polygons[[i]]@labpt[[1]] # Barycentre
xmin[i, "Xmin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
xmax[i, "Xmax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
y[i,"Y"] = REG@polygons[[i]]@labpt[[2]]
ymin[i, "Ymin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
ymax[i, "Ymax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
z[i,"Total"] = sum(LOC[LOC$IDPOL == i,]$FREQ)
area[i, "Area"] = REG@polygons[[i]]@Polygons[[1]]@area
}
x$IDPOL = rownames(x)
xmin$IDPOL = rownames(xmin)
xmax$IDPOL = rownames(xmax)
ymin$IDPOL = rownames(ymin)
ymax$IDPOL = rownames(ymax)
y$IDPOL = rownames(y)
z$IDPOL = rownames(z)
area$IDPOL = rownames(area)
x= x[complete.cases(x),]
area= area[complete.cases(area),]
xmin= xmin[complete.cases(xmin),]
xmax= xmax[complete.cases(xmax),]
ymin= ymin[complete.cases(ymin),]
ymax= ymax[complete.cases(ymax),]
y= y[complete.cases(y),]
z= z[complete.cases(z),]
LOC = merge(LOC, x, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, y, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, z, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, area, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC$RFREQ = LOC$FREQ / LOC$Total
LOC$WIDTH = nchar(as.character(LOC$WORDS), type = "width")
LOC$Random = runif(dim(LOC)[[1]], 0, 1)
LOC$NewY = ifelse(LOC$RFREQ < 1, LOC$Random * LOC$Ymin + (1-LOC$Random) * LOC$Ymax,LOC$Y)
LOC
area = LOC[,"Area"]
plot(REG)
x <- LOC[,"X"]
y <- LOC[,"NewY"]
w <- LOC[,"WORDS"]
f = LOC[,"RFREQ"]
n = LOC[,"WIDTH"]
a = LOC[,"Area"]
fn = a / n
text(x,y,w, cex = fn)
fn = a * 10/ n
plot(REG)
text(x,y,w, cex = fn)
plot(REG)
fn = 10/ n
text(x,y,w, cex = fn)
fn = 5/ n
text(x,y,w, cex = fn)
plot(REG)
text(x,y,w, cex = fn)
LOC=NULL
ID = c(1:9)
WORDS = c("Veranda", "Bulle", "Charlie", "Paper", "Charlie", "Paper", "Charlie", "Paper")
IDREG = c(1, 11,11, 3, 4, 6, 5, 2)
FREQ = c(3, 1, 2,1, 1, 2,1, 3, 3)
LOC = data.frame(ID, WORDS, IDREG, FREQ)
LOC$IDPOL = LOC$IDREG + 1
ids = unique(LOC$IDPOL)
x=data.frame()
ymin=data.frame()
ymax=data.frame()
xmin=data.frame()
xmax=data.frame()
y=data.frame()
z=data.frame()
area=data.frame()
for (i in ids) {
x[i,"X"] = REG@polygons[[i]]@labpt[[1]] # Barycentre
xmin[i, "Xmin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
xmax[i, "Xmax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
y[i,"Y"] = REG@polygons[[i]]@labpt[[2]]
ymin[i, "Ymin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
ymax[i, "Ymax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
z[i,"Total"] = sum(LOC[LOC$IDPOL == i,]$FREQ)
area[i, "Area"] = REG@polygons[[i]]@Polygons[[1]]@area
}
x$IDPOL = rownames(x)
xmin$IDPOL = rownames(xmin)
xmax$IDPOL = rownames(xmax)
ymin$IDPOL = rownames(ymin)
ymax$IDPOL = rownames(ymax)
y$IDPOL = rownames(y)
z$IDPOL = rownames(z)
area$IDPOL = rownames(area)
x= x[complete.cases(x),]
area= area[complete.cases(area),]
xmin= xmin[complete.cases(xmin),]
xmax= xmax[complete.cases(xmax),]
ymin= ymin[complete.cases(ymin),]
ymax= ymax[complete.cases(ymax),]
y= y[complete.cases(y),]
z= z[complete.cases(z),]
LOC = merge(LOC, x, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, y, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, z, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, area, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC$RFREQ = LOC$FREQ / LOC$Total
LOC$WIDTH = nchar(as.character(LOC$WORDS), type = "width")
LOC$Random = runif(dim(LOC)[[1]], 0, 1)
LOC$NewY = ifelse(LOC$RFREQ < 1, LOC$Random * LOC$Ymin + (1-LOC$Random) * LOC$Ymax,LOC$Y)
LOC
plot(REG)
x <- LOC[,"X"]
y <- LOC[,"NewY"]
w <- LOC[,"WORDS"]
f = LOC[,"RFREQ"]
text(x,y,w, cex = f)
plot(REG)
n = LOC[,"WIDTH"]
a = LOC[,"Area"]
fn = 5/ n
text(x,y,w, cex = fn)
LOC=NULL
ID = c(1:8)
WORDS = c("Veranda", "Bulle", "Charlie", "Paper", "Charlie", "Paper", "Charlie", "Paper")
IDREG = c(1, 11,11, 3, 4, 6, 5, 2)
FREQ = c(3, 1, 2,1, 1, 2,1, 3)
LOC = data.frame(ID, WORDS, IDREG, FREQ)
LOC$IDPOL = LOC$IDREG + 1
ids = unique(LOC$IDPOL)
x=data.frame()
ymin=data.frame()
ymax=data.frame()
xmin=data.frame()
xmax=data.frame()
y=data.frame()
z=data.frame()
area=data.frame()
for (i in ids) {
x[i,"X"] = REG@polygons[[i]]@labpt[[1]] # Barycentre
xmin[i, "Xmin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
xmax[i, "Xmax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,1])
y[i,"Y"] = REG@polygons[[i]]@labpt[[2]]
ymin[i, "Ymin"] = min(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
ymax[i, "Ymax"] = max(REG@polygons[[i]]@Polygons[[1]]@coords[,2])
z[i,"Total"] = sum(LOC[LOC$IDPOL == i,]$FREQ)
area[i, "Area"] = REG@polygons[[i]]@Polygons[[1]]@area
}
x$IDPOL = rownames(x)
xmin$IDPOL = rownames(xmin)
xmax$IDPOL = rownames(xmax)
ymin$IDPOL = rownames(ymin)
ymax$IDPOL = rownames(ymax)
y$IDPOL = rownames(y)
z$IDPOL = rownames(z)
area$IDPOL = rownames(area)
x= x[complete.cases(x),]
area= area[complete.cases(area),]
xmin= xmin[complete.cases(xmin),]
xmax= xmax[complete.cases(xmax),]
ymin= ymin[complete.cases(ymin),]
ymax= ymax[complete.cases(ymax),]
y= y[complete.cases(y),]
z= z[complete.cases(z),]
LOC = merge(LOC, x, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, ymax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmin, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, xmax, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, y, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, z, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC = merge(LOC, area, by.x = "IDPOL", by.y="IDPOL", all.y=F)
LOC$RFREQ = LOC$FREQ / LOC$Total
LOC$WIDTH = nchar(as.character(LOC$WORDS), type = "width")
LOC$Random = runif(dim(LOC)[[1]], 0, 1)
LOC$NewY = ifelse(LOC$RFREQ < 1, LOC$Random * LOC$Ymin + (1-LOC$Random) * LOC$Ymax,LOC$Y)
LOC
plot(REG)
x <- LOC[,"X"]
y <- LOC[,"NewY"]
w <- LOC[,"WORDS"]
f = LOC[,"RFREQ"]
text(x,y,w, cex = f)
plot(REG)
n = LOC[,"WIDTH"]
a = LOC[,"Area"]
fn = 5/ n
text(x,y,w, cex = fn)
plot(REG, border = "white", col = "grey")
n = LOC[,"WIDTH"]
a = LOC[,"Area"]
fn = 5/ n
text(x,y,w, cex = fn)
plot(REG, border = "white", col = "grey")
n = LOC[,"WIDTH"]
a = LOC[,"Area"]
fn = 5/ n * f
text(x,y,w, cex = fn)
plot(REG, border = "white", col = "grey")
x <- LOC[,"X"]
y <- LOC[,"NewY"]
w <- LOC[,"WORDS"]
f = LOC[,"RFREQ"]
text(x,y,w, cex = f)
x
l = LOC[order(LOC$RFREQ),]
l
testd <- data.table(l)
library("dplyr")
testd <- data.table(l)
install.packages("ddply")
library("ddply")
library("plyr")
ddply(l, .(id), function(x) x[c(1, nrow(x)), ])
l
ddply(l, .(ID), function(x) x[c(1, nrow(x)), ])
ddply(l, .(IDREG), function(x) x[c(1, nrow(x)), ])
l
tmp = as.data.table(l)
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("data.table")
tmp = as.data.table(l)
tmp[, .SD[c(1,.N)], by=IDREG]
tmp[, .SD[c(1,2)], by=IDREG]
tmp[, .SD[c(1,1)], by=IDREG]
l
